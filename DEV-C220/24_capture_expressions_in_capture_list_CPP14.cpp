// В списке захвата по стандарту С++14 можно использовать ВЫРАЖЕНИЕ, например "[val = std::rand() % 10]"
// При этом в анонимном функторе компилятор создает переменную-член с именем "val" и инициализирует её вычисленным значением выражения
// Тип этой переменной-члена (именем "val") компилятор выводит сам.

// Пусть требуется увеличить все элементы массива на случайно сформированное значение
#include <algorithm>  // std::for_each
#include <cstdlib>    // std::rand
#include <iterator>   // std::begin, std::end

#include "my_print.h"

using namespace std::literals;

int main() {
    int ar[10] = {1, 2, 3};
    // PrintCollection(ar);
    PrintCollection(ar, "initial array: "s);

    // в анонимном функторе компилятор формирует переменную-член с именем "val" (во внешнем контексте такой переменной нет, а в анонимном функторе она будет)
    // с выведенным типом "int" (т.к. std::rand возвращает int)
    // а в конструкторе анонимного функтора переменная-член "val" будет проинициализирована значением "std::rand() % 10"

    // В общем случае "[val = std::rand() % 10]" - это указание компилятору сформировать в анонимном функторе переменную-член с именем "val"
    // тип для "val" компилятор выведет сам, а в конструкторе проинициализирует значением после знака "равно", т.е. "std::rand() % 10"
    std::for_each(std::begin(ar), std::end(ar),
                  [val = std::rand() % 10](int& x) {
                      x += val;
                  });

    PrintCollection(ar, "after std::for_each applied: ");

    return 0;
}
