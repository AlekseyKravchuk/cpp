// В базовом классе есть переменная, соответственно есть и конструктор для инициализации этой переменной
class A {
   private:
    int _a;

   public:
    A(int a) : _a(a) {}
};

// В производном классе переменных нет.
// До С++11 для того, чтобы проинициализировать базовую часть, нужно было в производном классе
// явно реализовывать конструктор, который бы принимал параметр, предназначаемый для базового класса
class B : public A {
   public:
   // В С++11 появилась возможность неявно использовать конструкторы базового класса за счет их наследования.
   using A::A;
    // B(int b) : A(b) {}
};

int main() {
    A a1(15);
    B b1(20);

    return 0;
}
