#include <iostream>
#include <string>

using namespace std;


// Шаблонная функция RunTestImpl() нужна для того, чтобы передавать юнит-тесты в качестве параметров, не указывая явно их тип.
// Именно поэтому RunTestImpl — шаблон, а не просто функция.
// Компилятор выводит тип за нас, и мы можем передавать функции в качестве параметров, не зная, какой именно у них тип.
template <typename FuntionType>
void RunTestImpl(FuntionType func) {
    func();
}

#define RUN_TEST(func) {RunTestImpl(func); cerr << #func << " OK" << endl;}

void Test1() {
}

int main() {
    // Макрос RUN_TEST автоматически определяет имя теста, переведя в строковое представление свой единственный аргумент,
    // и передаёт его в качестве второго параметра функции RunTestImpl.

    // Кроме того, использование макроса RUN_TEST позволяет делать меньше ошибок при вызове тестов.
    // Так пользователю не нужно передавать строку, которая задаёт имя теста. То есть риск сделать опечатку в имени теста снижается.
    // А если тестирующую функцию переименуют, синхронизировать её название и имя теста не придётся.
    RUN_TEST(Test1);
}